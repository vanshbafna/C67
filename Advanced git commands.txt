user@user-PC MINGW32 ~
$ pwd
/c/Users/user

user@user-PC MINGW32 ~
$ mkdir myStory

user@user-PC MINGW32 ~
$ cd myStory

user@user-PC MINGW32 ~/myStory
$ pwd
/c/Users/user/myStory

user@user-PC MINGW32 ~/myStory
$ git init
Initialized empty Git repository in C:/Users/user/myStory/.git/

user@user-PC MINGW32 ~/myStory (master)
$ git status
On branch master

No commits yet

nothing to commit (create/copy files and use "git add" to track)

user@user-PC MINGW32 ~/myStory (master)
$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        characters
        story

nothing added to commit but untracked files present (use "git add" to track)

user@user-PC MINGW32 ~/myStory (master)
$ git add characters.txt
fatal: pathspec 'characters.txt' did not match any files

user@user-PC MINGW32 ~/myStory (master)
$ git add characters

user@user-PC MINGW32 ~/myStory (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   characters

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        story


user@user-PC MINGW32 ~/myStory (master)
$ git addd .
git: 'addd' is not a git command. See 'git --help'.

The most similar command is
        add

user@user-PC MINGW32 ~/myStory (master)
$ git add .

user@user-PC MINGW32 ~/myStory (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   characters
        new file:   story


user@user-PC MINGW32 ~/myStory (master)
$ git diff --staged
diff --git a/characters b/characters
new file mode 100644
index 0000000..fd427d5
--- /dev/null
+++ b/characters
@@ -0,0 +1 @@
+Pc and Npc
\ No newline at end of file
diff --git a/story b/story
new file mode 100644
index 0000000..ec50e47
--- /dev/null
+++ b/story
@@ -0,0 +1 @@
+first story line
\ No newline at end of file

user@user-PC MINGW32 ~/myStory (master)
$ git commit -m "first line edit"
[master (root-commit) e95cc5e] first line edit
 2 files changed, 2 insertions(+)
 create mode 100644 characters
 create mode 100644 story

user@user-PC MINGW32 ~/myStory (master)
$ git status
On branch master
nothing to commit, working tree clean

user@user-PC MINGW32 ~/myStory (master)
$ git log
commit e95cc5e355ed3eda762536d7cb63ff26f2ec0518 (HEAD -> master)
Author: vanshbafna <vanshbafnajain@gmail.com>
Date:   Thu May 7 20:26:16 2020 +0530

    first line edit

user@user-PC MINGW32 ~/myStory (master)
$ git checkout e95cc
Note: switching to 'e95cc'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at e95cc5e first line edit

user@user-PC MINGW32 ~/myStory ((e95cc5e...))
$ git branch newbranch

user@user-PC MINGW32 ~/myStory ((e95cc5e...))
$ git branch
* (HEAD detached at e95cc5e)
  master
  newbranch

user@user-PC MINGW32 ~/myStory ((e95cc5e...))
$ git status
HEAD detached at e95cc5e
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   story

no changes added to commit (use "git add" and/or "git commit -a")

user@user-PC MINGW32 ~/myStory ((e95cc5e...))
$ git checkout newbranch
Switched to branch 'newbranch'
M       story

user@user-PC MINGW32 ~/myStory (newbranch)
$ git branch
  master
* newbranch

user@user-PC MINGW32 ~/myStory (newbranch)
$ git log
commit e95cc5e355ed3eda762536d7cb63ff26f2ec0518 (HEAD -> newbranch, master)
Author: vanshbafna <vanshbafnajain@gmail.com>
Date:   Thu May 7 20:26:16 2020 +0530

    first line edit

user@user-PC MINGW32 ~/myStory (newbranch)
$ git commit
On branch newbranch
Changes not staged for commit:
        modified:   story

no changes added to commit

user@user-PC MINGW32 ~/myStory (newbranch)
$ git commit
On branch newbranch
Changes not staged for commit:
        modified:   story

no changes added to commit

user@user-PC MINGW32 ~/myStory (newbranch)
$ git add story

user@user-PC MINGW32 ~/myStory (newbranch)
$ git commit
Aborting commit due to empty commit message.

user@user-PC MINGW32 ~/myStory (newbranch)
$ git commit -m "second line added"
[newbranch 522cd86] second line added
 1 file changed, 2 insertions(+), 1 deletion(-)

user@user-PC MINGW32 ~/myStory (newbranch)
$ git log
commit 522cd86f45dee5d10c40f86d6abda4c5490b1a3e (HEAD -> newbranch)
Author: vanshbafna <vanshbafnajain@gmail.com>
Date:   Thu May 7 20:40:07 2020 +0530

    second line added

commit e95cc5e355ed3eda762536d7cb63ff26f2ec0518 (master)
Author: vanshbafna <vanshbafnajain@gmail.com>
Date:   Thu May 7 20:26:16 2020 +0530

    first line edit

user@user-PC MINGW32 ~/myStory (newbranch)
$ git diff master newbranch
diff --git a/story b/story
index ec50e47..6a8981e 100644
--- a/story
+++ b/story
@@ -1 +1,2 @@
-first story line
\ No newline at end of file
+first story line
+2nd line add it

user@user-PC MINGW32 ~/myStory (newbranch)
$ git remote add origin https://github.com/vanshbafna/C67.git

user@user-PC MINGW32 ~/myStory (newbranch)
$ git push -u C67
fatal: 'C67' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.

user@user-PC MINGW32 ~/myStory (newbranch)
$ git remote add C67 https://github.com/vanshbafna/C67.git

user@user-PC MINGW32 ~/myStory (newbranch)
$ git push -u C67
Enumerating objects: 7, done.
Counting objects: 100% (7/7), done.
Delta compression using up to 4 threads
Compressing objects: 100% (4/4), done.
Writing objects: 100% (7/7), 552 bytes | 55.00 KiB/s, done.
Total 7 (delta 0), reused 0 (delta 0)
To https://github.com/vanshbafna/C67.git
 * [new branch]      newbranch -> newbranch
Branch 'newbranch' set up to track remote branch 'newbranch' from 'C67'.

user@user-PC MINGW32 ~/myStory (newbranch)
$ git pull C67
remote: Enumerating objects: 5, done.
remote: Counting objects: 100% (5/5), done.
remote: Compressing objects: 100% (2/2), done.
remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), 685 bytes | 3.00 KiB/s, done.
From https://github.com/vanshbafna/C67
   522cd86..dd74535  newbranch  -> C67/newbranch
Updating 522cd86..dd74535
Fast-forward
 story | 2 ++
 1 file changed, 2 insertions(+)

user@user-PC MINGW32 ~/myStory (newbranch)
$
